// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomSignatureType - Type of auth method
type CustomSignatureType string

const (
	CustomSignatureTypeCustomSignature CustomSignatureType = "CUSTOM_SIGNATURE"
)

func (e CustomSignatureType) ToPointer() *CustomSignatureType {
	return &e
}

func (e *CustomSignatureType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CUSTOM_SIGNATURE":
		*e = CustomSignatureType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomSignatureType: %v", v)
	}
}

// CustomSignature - Custom Signature
type CustomSignature struct {
	// Custom signature config for the destination's auth method
	Config DestinationAuthMethodCustomSignatureConfig `json:"config"`
	// Type of auth method
	Type CustomSignatureType `json:"type"`
}
