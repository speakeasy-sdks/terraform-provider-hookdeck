// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IgnoredEventCause string

const (
	IgnoredEventCauseArchived             IgnoredEventCause = "ARCHIVED"
	IgnoredEventCauseFiltered             IgnoredEventCause = "FILTERED"
	IgnoredEventCauseTransformationFailed IgnoredEventCause = "TRANSFORMATION_FAILED"
	IgnoredEventCauseCliDisconnected      IgnoredEventCause = "CLI_DISCONNECTED"
)

func (e IgnoredEventCause) ToPointer() *IgnoredEventCause {
	return &e
}

func (e *IgnoredEventCause) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARCHIVED":
		fallthrough
	case "FILTERED":
		fallthrough
	case "TRANSFORMATION_FAILED":
		fallthrough
	case "CLI_DISCONNECTED":
		*e = IgnoredEventCause(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IgnoredEventCause: %v", v)
	}
}
