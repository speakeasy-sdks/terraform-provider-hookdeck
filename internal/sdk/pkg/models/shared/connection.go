// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// Connection - A single connection
type Connection struct {
	// Date the connection was archived
	ArchivedAt *time.Time `json:"archived_at,omitempty"`
	// Date the connection was created
	CreatedAt time.Time `json:"created_at"`
	// Associated [Destination](#destination-object) object
	Destination Destination `json:"destination"`
	// ID of the connection
	ID string `json:"id"`
	// Unique name of the connection for this source
	Name string `json:"name"`
	// Date the connection was paused
	PausedAt *time.Time `json:"paused_at,omitempty"`
	// Array of rules applied to connection after factoring for the ruleset
	ResolvedRules []Rule `json:"resolved_rules,omitempty"`
	// Array of rules configured on the connection
	Rules []Rule `json:"rules,omitempty"`
	// Associated [Ruleset](#ruleset-object) object
	Ruleset *Ruleset `json:"ruleset,omitempty"`
	// Associated [Source](#source-object) object
	Source Source `json:"source"`
	// ID of the workspace
	TeamID string `json:"team_id"`
	// Date the connection was last updated
	UpdatedAt time.Time `json:"updated_at"`
}
