// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AttemptStatus - Attempt status
type AttemptStatus string

const (
	AttemptStatusQueued     AttemptStatus = "QUEUED"
	AttemptStatusFailed     AttemptStatus = "FAILED"
	AttemptStatusSuccessful AttemptStatus = "SUCCESSFUL"
	AttemptStatusHold       AttemptStatus = "HOLD"
)

func (e AttemptStatus) ToPointer() *AttemptStatus {
	return &e
}

func (e *AttemptStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "QUEUED":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCESSFUL":
		fallthrough
	case "HOLD":
		*e = AttemptStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttemptStatus: %v", v)
	}
}
