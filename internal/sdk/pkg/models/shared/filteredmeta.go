// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FilteredMeta string

const (
	FilteredMetaBody    FilteredMeta = "body"
	FilteredMetaHeaders FilteredMeta = "headers"
	FilteredMetaPath    FilteredMeta = "path"
	FilteredMetaQuery   FilteredMeta = "query"
)

func (e FilteredMeta) ToPointer() *FilteredMeta {
	return &e
}

func (e *FilteredMeta) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "body":
		fallthrough
	case "headers":
		fallthrough
	case "path":
		fallthrough
	case "query":
		*e = FilteredMeta(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilteredMeta: %v", v)
	}
}
