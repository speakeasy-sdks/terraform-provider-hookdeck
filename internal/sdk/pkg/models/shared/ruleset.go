// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"hashicups/internal/sdk/pkg/utils"
	"time"
)

// Ruleset - Associated [Ruleset](#ruleset-object) object
type Ruleset struct {
	// Date the ruleset was archived
	ArchivedAt *time.Time `json:"archived_at,omitempty"`
	// Date the ruleset was created
	CreatedAt time.Time `json:"created_at"`
	// ID of the ruleset
	ID string `json:"id"`
	// Default ruleset of Workspace
	IsTeamDefault bool `json:"is_team_default"`
	// A unique name for the ruleset
	Name string `json:"name"`
	// Array of rules to apply
	Rules []Rule `json:"rules"`
	// ID of the workspace
	TeamID string `json:"team_id"`
	// Date the ruleset was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

func (r Ruleset) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *Ruleset) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Ruleset) GetArchivedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ArchivedAt
}

func (o *Ruleset) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Ruleset) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Ruleset) GetIsTeamDefault() bool {
	if o == nil {
		return false
	}
	return o.IsTeamDefault
}

func (o *Ruleset) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Ruleset) GetRules() []Rule {
	if o == nil {
		return []Rule{}
	}
	return o.Rules
}

func (o *Ruleset) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *Ruleset) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
