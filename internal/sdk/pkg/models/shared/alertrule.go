// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AlertRuleType - An alert rule must be of type `alert`
type AlertRuleType string

const (
	AlertRuleTypeAlert AlertRuleType = "alert"
)

func (e AlertRuleType) ToPointer() *AlertRuleType {
	return &e
}

func (e *AlertRuleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "alert":
		*e = AlertRuleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AlertRuleType: %v", v)
	}
}

type AlertRule struct {
	// Alert strategy to use
	Strategy AlertStrategy `json:"strategy"`
	// An alert rule must be of type `alert`
	Type AlertRuleType `json:"type"`
}
