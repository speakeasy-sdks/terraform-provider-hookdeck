// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventStatus string

const (
	EventStatusScheduled  EventStatus = "SCHEDULED"
	EventStatusQueued     EventStatus = "QUEUED"
	EventStatusHold       EventStatus = "HOLD"
	EventStatusSuccessful EventStatus = "SUCCESSFUL"
	EventStatusFailed     EventStatus = "FAILED"
)

func (e EventStatus) ToPointer() *EventStatus {
	return &e
}

func (e *EventStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SCHEDULED":
		fallthrough
	case "QUEUED":
		fallthrough
	case "HOLD":
		fallthrough
	case "SUCCESSFUL":
		fallthrough
	case "FAILED":
		*e = EventStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventStatus: %v", v)
	}
}
