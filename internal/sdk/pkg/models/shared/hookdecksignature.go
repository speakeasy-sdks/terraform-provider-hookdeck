// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HookdeckSignatureType - Type of auth method
type HookdeckSignatureType string

const (
	HookdeckSignatureTypeHookdeckSignature HookdeckSignatureType = "HOOKDECK_SIGNATURE"
)

func (e HookdeckSignatureType) ToPointer() *HookdeckSignatureType {
	return &e
}

func (e *HookdeckSignatureType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HOOKDECK_SIGNATURE":
		*e = HookdeckSignatureType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HookdeckSignatureType: %v", v)
	}
}

// HookdeckSignature - Hookdeck Signature
type HookdeckSignature struct {
	// Empty config for the destination's auth method
	Config *DestinationAuthMethodSignatureConfig `json:"config,omitempty"`
	// Type of auth method
	Type HookdeckSignatureType `json:"type"`
}

func (o *HookdeckSignature) GetConfig() *DestinationAuthMethodSignatureConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *HookdeckSignature) GetType() HookdeckSignatureType {
	if o == nil {
		return HookdeckSignatureType("")
	}
	return o.Type
}
