// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConsoleLineType string

const (
	ConsoleLineTypeError ConsoleLineType = "error"
	ConsoleLineTypeLog   ConsoleLineType = "log"
	ConsoleLineTypeWarn  ConsoleLineType = "warn"
	ConsoleLineTypeInfo  ConsoleLineType = "info"
	ConsoleLineTypeDebug ConsoleLineType = "debug"
)

func (e ConsoleLineType) ToPointer() *ConsoleLineType {
	return &e
}

func (e *ConsoleLineType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "error":
		fallthrough
	case "log":
		fallthrough
	case "warn":
		fallthrough
	case "info":
		fallthrough
	case "debug":
		*e = ConsoleLineType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsoleLineType: %v", v)
	}
}

type ConsoleLine struct {
	Message string          `json:"message"`
	Type    ConsoleLineType `json:"type"`
}
