// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AttemptState string

const (
	AttemptStateLessThanNilGreaterThan AttemptState = "<nil>"
	AttemptStateDelivering             AttemptState = "DELIVERING"
	AttemptStateQueued                 AttemptState = "QUEUED"
	AttemptStatePending                AttemptState = "PENDING"
	AttemptStateCompleted              AttemptState = "COMPLETED"
	AttemptStateHold                   AttemptState = "HOLD"
)

func (e AttemptState) ToPointer() *AttemptState {
	return &e
}

func (e *AttemptState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "<nil>":
		fallthrough
	case "DELIVERING":
		fallthrough
	case "QUEUED":
		fallthrough
	case "PENDING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "HOLD":
		*e = AttemptState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttemptState: %v", v)
	}
}
