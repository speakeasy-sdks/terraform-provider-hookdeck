// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BasicAuthType - Type of auth method
type BasicAuthType string

const (
	BasicAuthTypeBasicAuth BasicAuthType = "BASIC_AUTH"
)

func (e BasicAuthType) ToPointer() *BasicAuthType {
	return &e
}

func (e *BasicAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BASIC_AUTH":
		*e = BasicAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BasicAuthType: %v", v)
	}
}

// BasicAuth - Basic Auth
type BasicAuth struct {
	// Basic auth config for the destination's auth method
	Config *DestinationAuthMethodBasicAuthConfig `json:"config,omitempty"`
	// Type of auth method
	Type BasicAuthType `json:"type"`
}

func (o *BasicAuth) GetConfig() *DestinationAuthMethodBasicAuthConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *BasicAuth) GetType() BasicAuthType {
	if o == nil {
		return BasicAuthType("")
	}
	return o.Type
}
