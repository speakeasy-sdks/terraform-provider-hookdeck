// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DelayRuleType - A delay rule must be of type `delay`
type DelayRuleType string

const (
	DelayRuleTypeDelay DelayRuleType = "delay"
)

func (e DelayRuleType) ToPointer() *DelayRuleType {
	return &e
}

func (e *DelayRuleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delay":
		*e = DelayRuleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DelayRuleType: %v", v)
	}
}

type DelayRule struct {
	// Delay to introduce in MS
	Delay int64 `json:"delay"`
	// A delay rule must be of type `delay`
	Type DelayRuleType `json:"type"`
}
