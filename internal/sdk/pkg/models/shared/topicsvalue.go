// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TopicsValue - Supported topics
type TopicsValue string

const (
	TopicsValueIssueOpened             TopicsValue = "issue.opened"
	TopicsValueIssueUpdated            TopicsValue = "issue.updated"
	TopicsValueDeprecatedAttemptFailed TopicsValue = "deprecated.attempt-failed"
	TopicsValueEventSuccessful         TopicsValue = "event.successful"
)

func (e TopicsValue) ToPointer() *TopicsValue {
	return &e
}

func (e *TopicsValue) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "issue.opened":
		fallthrough
	case "issue.updated":
		fallthrough
	case "deprecated.attempt-failed":
		fallthrough
	case "event.successful":
		*e = TopicsValue(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TopicsValue: %v", v)
	}
}
