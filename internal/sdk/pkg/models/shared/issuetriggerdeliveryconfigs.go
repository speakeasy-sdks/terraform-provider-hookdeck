// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type IssueTriggerDeliveryConfigsConnectionsType string

const (
	IssueTriggerDeliveryConfigsConnectionsTypeStr        IssueTriggerDeliveryConfigsConnectionsType = "str"
	IssueTriggerDeliveryConfigsConnectionsTypeArrayOfstr IssueTriggerDeliveryConfigsConnectionsType = "arrayOfstr"
)

type IssueTriggerDeliveryConfigsConnections struct {
	Str        *string
	ArrayOfstr []string

	Type IssueTriggerDeliveryConfigsConnectionsType
}

func CreateIssueTriggerDeliveryConfigsConnectionsStr(str string) IssueTriggerDeliveryConfigsConnections {
	typ := IssueTriggerDeliveryConfigsConnectionsTypeStr

	return IssueTriggerDeliveryConfigsConnections{
		Str:  &str,
		Type: typ,
	}
}

func CreateIssueTriggerDeliveryConfigsConnectionsArrayOfstr(arrayOfstr []string) IssueTriggerDeliveryConfigsConnections {
	typ := IssueTriggerDeliveryConfigsConnectionsTypeArrayOfstr

	return IssueTriggerDeliveryConfigsConnections{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *IssueTriggerDeliveryConfigsConnections) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	str := new(string)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&str); err == nil {
		u.Str = str
		u.Type = IssueTriggerDeliveryConfigsConnectionsTypeStr
		return nil
	}

	arrayOfstr := []string{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfstr); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = IssueTriggerDeliveryConfigsConnectionsTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u IssueTriggerDeliveryConfigsConnections) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return json.Marshal(u.Str)
	}

	if u.ArrayOfstr != nil {
		return json.Marshal(u.ArrayOfstr)
	}

	return nil, nil
}

// IssueTriggerDeliveryConfigs - Configurations for a 'delivery' issue trigger
type IssueTriggerDeliveryConfigs struct {
	// A pattern to match on the connection name or array of connection IDs. Use `*` as wildcard.
	Connections IssueTriggerDeliveryConfigsConnections `json:"connections"`
	// The strategy uses to open the issue
	Strategy IssueTriggerStrategy `json:"strategy"`
}
