// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"hashicups/internal/sdk/pkg/models/shared"
	"net/http"
	"time"
)

// CreateRequestBulkRetryRequestBodyQueryBody2 - URL Encoded string of the JSON to match to the data body
type CreateRequestBulkRetryRequestBodyQueryBody2 struct {
}

type CreateRequestBulkRetryRequestBodyQueryBodyType string

const (
	CreateRequestBulkRetryRequestBodyQueryBodyTypeStr                                         CreateRequestBulkRetryRequestBodyQueryBodyType = "str"
	CreateRequestBulkRetryRequestBodyQueryBodyTypeCreateRequestBulkRetryRequestBodyQueryBody2 CreateRequestBulkRetryRequestBodyQueryBodyType = "createRequestBulkRetry_requestBody_query_body_2"
)

type CreateRequestBulkRetryRequestBodyQueryBody struct {
	Str                                         *string
	CreateRequestBulkRetryRequestBodyQueryBody2 *CreateRequestBulkRetryRequestBodyQueryBody2

	Type CreateRequestBulkRetryRequestBodyQueryBodyType
}

func CreateCreateRequestBulkRetryRequestBodyQueryBodyStr(str string) CreateRequestBulkRetryRequestBodyQueryBody {
	typ := CreateRequestBulkRetryRequestBodyQueryBodyTypeStr

	return CreateRequestBulkRetryRequestBodyQueryBody{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryBodyCreateRequestBulkRetryRequestBodyQueryBody2(createRequestBulkRetryRequestBodyQueryBody2 CreateRequestBulkRetryRequestBodyQueryBody2) CreateRequestBulkRetryRequestBodyQueryBody {
	typ := CreateRequestBulkRetryRequestBodyQueryBodyTypeCreateRequestBulkRetryRequestBodyQueryBody2

	return CreateRequestBulkRetryRequestBodyQueryBody{
		CreateRequestBulkRetryRequestBodyQueryBody2: &createRequestBulkRetryRequestBodyQueryBody2,
		Type: typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	str := new(string)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&str); err == nil {
		u.Str = str
		u.Type = CreateRequestBulkRetryRequestBodyQueryBodyTypeStr
		return nil
	}

	createRequestBulkRetryRequestBodyQueryBody2 := new(CreateRequestBulkRetryRequestBodyQueryBody2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryBody2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryBody2 = createRequestBulkRetryRequestBodyQueryBody2
		u.Type = CreateRequestBulkRetryRequestBodyQueryBodyTypeCreateRequestBulkRetryRequestBodyQueryBody2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryBody) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return json.Marshal(u.Str)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryBody2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryBody2)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQueryBulkRetryIDType string

const (
	CreateRequestBulkRetryRequestBodyQueryBulkRetryIDTypeStr        CreateRequestBulkRetryRequestBodyQueryBulkRetryIDType = "str"
	CreateRequestBulkRetryRequestBodyQueryBulkRetryIDTypeArrayOfstr CreateRequestBulkRetryRequestBodyQueryBulkRetryIDType = "arrayOfstr"
)

type CreateRequestBulkRetryRequestBodyQueryBulkRetryID struct {
	Str        *string
	ArrayOfstr []string

	Type CreateRequestBulkRetryRequestBodyQueryBulkRetryIDType
}

func CreateCreateRequestBulkRetryRequestBodyQueryBulkRetryIDStr(str string) CreateRequestBulkRetryRequestBodyQueryBulkRetryID {
	typ := CreateRequestBulkRetryRequestBodyQueryBulkRetryIDTypeStr

	return CreateRequestBulkRetryRequestBodyQueryBulkRetryID{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryBulkRetryIDArrayOfstr(arrayOfstr []string) CreateRequestBulkRetryRequestBodyQueryBulkRetryID {
	typ := CreateRequestBulkRetryRequestBodyQueryBulkRetryIDTypeArrayOfstr

	return CreateRequestBulkRetryRequestBodyQueryBulkRetryID{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryBulkRetryID) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	str := new(string)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&str); err == nil {
		u.Str = str
		u.Type = CreateRequestBulkRetryRequestBodyQueryBulkRetryIDTypeStr
		return nil
	}

	arrayOfstr := []string{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfstr); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = CreateRequestBulkRetryRequestBodyQueryBulkRetryIDTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryBulkRetryID) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return json.Marshal(u.Str)
	}

	if u.ArrayOfstr != nil {
		return json.Marshal(u.ArrayOfstr)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQueryCreatedAt2 struct {
	Any *bool      `json:"any,omitempty"`
	Gt  *time.Time `json:"gt,omitempty"`
	Gte *time.Time `json:"gte,omitempty"`
	Le  *time.Time `json:"le,omitempty"`
	Lte *time.Time `json:"lte,omitempty"`
}

type CreateRequestBulkRetryRequestBodyQueryCreatedAtType string

const (
	CreateRequestBulkRetryRequestBodyQueryCreatedAtTypeDateTime                                         CreateRequestBulkRetryRequestBodyQueryCreatedAtType = "date-time"
	CreateRequestBulkRetryRequestBodyQueryCreatedAtTypeCreateRequestBulkRetryRequestBodyQueryCreatedAt2 CreateRequestBulkRetryRequestBodyQueryCreatedAtType = "createRequestBulkRetry_requestBody_query_created_at_2"
)

type CreateRequestBulkRetryRequestBodyQueryCreatedAt struct {
	DateTime                                         *time.Time
	CreateRequestBulkRetryRequestBodyQueryCreatedAt2 *CreateRequestBulkRetryRequestBodyQueryCreatedAt2

	Type CreateRequestBulkRetryRequestBodyQueryCreatedAtType
}

func CreateCreateRequestBulkRetryRequestBodyQueryCreatedAtDateTime(dateTime time.Time) CreateRequestBulkRetryRequestBodyQueryCreatedAt {
	typ := CreateRequestBulkRetryRequestBodyQueryCreatedAtTypeDateTime

	return CreateRequestBulkRetryRequestBodyQueryCreatedAt{
		DateTime: &dateTime,
		Type:     typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryCreatedAtCreateRequestBulkRetryRequestBodyQueryCreatedAt2(createRequestBulkRetryRequestBodyQueryCreatedAt2 CreateRequestBulkRetryRequestBodyQueryCreatedAt2) CreateRequestBulkRetryRequestBodyQueryCreatedAt {
	typ := CreateRequestBulkRetryRequestBodyQueryCreatedAtTypeCreateRequestBulkRetryRequestBodyQueryCreatedAt2

	return CreateRequestBulkRetryRequestBodyQueryCreatedAt{
		CreateRequestBulkRetryRequestBodyQueryCreatedAt2: &createRequestBulkRetryRequestBodyQueryCreatedAt2,
		Type: typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryCreatedAt) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	dateTime := new(time.Time)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&dateTime); err == nil {
		u.DateTime = dateTime
		u.Type = CreateRequestBulkRetryRequestBodyQueryCreatedAtTypeDateTime
		return nil
	}

	createRequestBulkRetryRequestBodyQueryCreatedAt2 := new(CreateRequestBulkRetryRequestBodyQueryCreatedAt2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryCreatedAt2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryCreatedAt2 = createRequestBulkRetryRequestBodyQueryCreatedAt2
		u.Type = CreateRequestBulkRetryRequestBodyQueryCreatedAtTypeCreateRequestBulkRetryRequestBodyQueryCreatedAt2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryCreatedAt) MarshalJSON() ([]byte, error) {
	if u.DateTime != nil {
		return json.Marshal(u.DateTime)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryCreatedAt2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryCreatedAt2)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQueryEventsCount2 struct {
	Any      *bool  `json:"any,omitempty"`
	Contains *int64 `json:"contains,omitempty"`
	Gt       *int64 `json:"gt,omitempty"`
	Gte      *int64 `json:"gte,omitempty"`
	Le       *int64 `json:"le,omitempty"`
	Lte      *int64 `json:"lte,omitempty"`
}

type CreateRequestBulkRetryRequestBodyQueryEventsCountType string

const (
	CreateRequestBulkRetryRequestBodyQueryEventsCountTypeInteger                                            CreateRequestBulkRetryRequestBodyQueryEventsCountType = "integer"
	CreateRequestBulkRetryRequestBodyQueryEventsCountTypeCreateRequestBulkRetryRequestBodyQueryEventsCount2 CreateRequestBulkRetryRequestBodyQueryEventsCountType = "createRequestBulkRetry_requestBody_query_events_count_2"
	CreateRequestBulkRetryRequestBodyQueryEventsCountTypeArrayOfinteger                                     CreateRequestBulkRetryRequestBodyQueryEventsCountType = "arrayOfinteger"
)

type CreateRequestBulkRetryRequestBodyQueryEventsCount struct {
	Integer                                            *int64
	CreateRequestBulkRetryRequestBodyQueryEventsCount2 *CreateRequestBulkRetryRequestBodyQueryEventsCount2
	ArrayOfinteger                                     []int64

	Type CreateRequestBulkRetryRequestBodyQueryEventsCountType
}

func CreateCreateRequestBulkRetryRequestBodyQueryEventsCountInteger(integer int64) CreateRequestBulkRetryRequestBodyQueryEventsCount {
	typ := CreateRequestBulkRetryRequestBodyQueryEventsCountTypeInteger

	return CreateRequestBulkRetryRequestBodyQueryEventsCount{
		Integer: &integer,
		Type:    typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryEventsCountCreateRequestBulkRetryRequestBodyQueryEventsCount2(createRequestBulkRetryRequestBodyQueryEventsCount2 CreateRequestBulkRetryRequestBodyQueryEventsCount2) CreateRequestBulkRetryRequestBodyQueryEventsCount {
	typ := CreateRequestBulkRetryRequestBodyQueryEventsCountTypeCreateRequestBulkRetryRequestBodyQueryEventsCount2

	return CreateRequestBulkRetryRequestBodyQueryEventsCount{
		CreateRequestBulkRetryRequestBodyQueryEventsCount2: &createRequestBulkRetryRequestBodyQueryEventsCount2,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryEventsCountArrayOfinteger(arrayOfinteger []int64) CreateRequestBulkRetryRequestBodyQueryEventsCount {
	typ := CreateRequestBulkRetryRequestBodyQueryEventsCountTypeArrayOfinteger

	return CreateRequestBulkRetryRequestBodyQueryEventsCount{
		ArrayOfinteger: arrayOfinteger,
		Type:           typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryEventsCount) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	integer := new(int64)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&integer); err == nil {
		u.Integer = integer
		u.Type = CreateRequestBulkRetryRequestBodyQueryEventsCountTypeInteger
		return nil
	}

	createRequestBulkRetryRequestBodyQueryEventsCount2 := new(CreateRequestBulkRetryRequestBodyQueryEventsCount2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryEventsCount2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryEventsCount2 = createRequestBulkRetryRequestBodyQueryEventsCount2
		u.Type = CreateRequestBulkRetryRequestBodyQueryEventsCountTypeCreateRequestBulkRetryRequestBodyQueryEventsCount2
		return nil
	}

	arrayOfinteger := []int64{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfinteger); err == nil {
		u.ArrayOfinteger = arrayOfinteger
		u.Type = CreateRequestBulkRetryRequestBodyQueryEventsCountTypeArrayOfinteger
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryEventsCount) MarshalJSON() ([]byte, error) {
	if u.Integer != nil {
		return json.Marshal(u.Integer)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryEventsCount2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryEventsCount2)
	}

	if u.ArrayOfinteger != nil {
		return json.Marshal(u.ArrayOfinteger)
	}

	return nil, nil
}

// CreateRequestBulkRetryRequestBodyQueryHeaders2 - URL Encoded string of the JSON to match to the data headers
type CreateRequestBulkRetryRequestBodyQueryHeaders2 struct {
}

type CreateRequestBulkRetryRequestBodyQueryHeadersType string

const (
	CreateRequestBulkRetryRequestBodyQueryHeadersTypeStr                                            CreateRequestBulkRetryRequestBodyQueryHeadersType = "str"
	CreateRequestBulkRetryRequestBodyQueryHeadersTypeCreateRequestBulkRetryRequestBodyQueryHeaders2 CreateRequestBulkRetryRequestBodyQueryHeadersType = "createRequestBulkRetry_requestBody_query_headers_2"
)

type CreateRequestBulkRetryRequestBodyQueryHeaders struct {
	Str                                            *string
	CreateRequestBulkRetryRequestBodyQueryHeaders2 *CreateRequestBulkRetryRequestBodyQueryHeaders2

	Type CreateRequestBulkRetryRequestBodyQueryHeadersType
}

func CreateCreateRequestBulkRetryRequestBodyQueryHeadersStr(str string) CreateRequestBulkRetryRequestBodyQueryHeaders {
	typ := CreateRequestBulkRetryRequestBodyQueryHeadersTypeStr

	return CreateRequestBulkRetryRequestBodyQueryHeaders{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryHeadersCreateRequestBulkRetryRequestBodyQueryHeaders2(createRequestBulkRetryRequestBodyQueryHeaders2 CreateRequestBulkRetryRequestBodyQueryHeaders2) CreateRequestBulkRetryRequestBodyQueryHeaders {
	typ := CreateRequestBulkRetryRequestBodyQueryHeadersTypeCreateRequestBulkRetryRequestBodyQueryHeaders2

	return CreateRequestBulkRetryRequestBodyQueryHeaders{
		CreateRequestBulkRetryRequestBodyQueryHeaders2: &createRequestBulkRetryRequestBodyQueryHeaders2,
		Type: typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryHeaders) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	str := new(string)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&str); err == nil {
		u.Str = str
		u.Type = CreateRequestBulkRetryRequestBodyQueryHeadersTypeStr
		return nil
	}

	createRequestBulkRetryRequestBodyQueryHeaders2 := new(CreateRequestBulkRetryRequestBodyQueryHeaders2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryHeaders2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryHeaders2 = createRequestBulkRetryRequestBodyQueryHeaders2
		u.Type = CreateRequestBulkRetryRequestBodyQueryHeadersTypeCreateRequestBulkRetryRequestBodyQueryHeaders2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryHeaders) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return json.Marshal(u.Str)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryHeaders2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryHeaders2)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQueryIDType string

const (
	CreateRequestBulkRetryRequestBodyQueryIDTypeStr        CreateRequestBulkRetryRequestBodyQueryIDType = "str"
	CreateRequestBulkRetryRequestBodyQueryIDTypeArrayOfstr CreateRequestBulkRetryRequestBodyQueryIDType = "arrayOfstr"
)

type CreateRequestBulkRetryRequestBodyQueryID struct {
	Str        *string
	ArrayOfstr []string

	Type CreateRequestBulkRetryRequestBodyQueryIDType
}

func CreateCreateRequestBulkRetryRequestBodyQueryIDStr(str string) CreateRequestBulkRetryRequestBodyQueryID {
	typ := CreateRequestBulkRetryRequestBodyQueryIDTypeStr

	return CreateRequestBulkRetryRequestBodyQueryID{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryIDArrayOfstr(arrayOfstr []string) CreateRequestBulkRetryRequestBodyQueryID {
	typ := CreateRequestBulkRetryRequestBodyQueryIDTypeArrayOfstr

	return CreateRequestBulkRetryRequestBodyQueryID{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryID) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	str := new(string)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&str); err == nil {
		u.Str = str
		u.Type = CreateRequestBulkRetryRequestBodyQueryIDTypeStr
		return nil
	}

	arrayOfstr := []string{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfstr); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = CreateRequestBulkRetryRequestBodyQueryIDTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryID) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return json.Marshal(u.Str)
	}

	if u.ArrayOfstr != nil {
		return json.Marshal(u.ArrayOfstr)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQueryIgnoredCount2 struct {
	Any      *bool  `json:"any,omitempty"`
	Contains *int64 `json:"contains,omitempty"`
	Gt       *int64 `json:"gt,omitempty"`
	Gte      *int64 `json:"gte,omitempty"`
	Le       *int64 `json:"le,omitempty"`
	Lte      *int64 `json:"lte,omitempty"`
}

type CreateRequestBulkRetryRequestBodyQueryIgnoredCountType string

const (
	CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeInteger                                             CreateRequestBulkRetryRequestBodyQueryIgnoredCountType = "integer"
	CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeCreateRequestBulkRetryRequestBodyQueryIgnoredCount2 CreateRequestBulkRetryRequestBodyQueryIgnoredCountType = "createRequestBulkRetry_requestBody_query_ignored_count_2"
	CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeArrayOfinteger                                      CreateRequestBulkRetryRequestBodyQueryIgnoredCountType = "arrayOfinteger"
)

type CreateRequestBulkRetryRequestBodyQueryIgnoredCount struct {
	Integer                                             *int64
	CreateRequestBulkRetryRequestBodyQueryIgnoredCount2 *CreateRequestBulkRetryRequestBodyQueryIgnoredCount2
	ArrayOfinteger                                      []int64

	Type CreateRequestBulkRetryRequestBodyQueryIgnoredCountType
}

func CreateCreateRequestBulkRetryRequestBodyQueryIgnoredCountInteger(integer int64) CreateRequestBulkRetryRequestBodyQueryIgnoredCount {
	typ := CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeInteger

	return CreateRequestBulkRetryRequestBodyQueryIgnoredCount{
		Integer: &integer,
		Type:    typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryIgnoredCountCreateRequestBulkRetryRequestBodyQueryIgnoredCount2(createRequestBulkRetryRequestBodyQueryIgnoredCount2 CreateRequestBulkRetryRequestBodyQueryIgnoredCount2) CreateRequestBulkRetryRequestBodyQueryIgnoredCount {
	typ := CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeCreateRequestBulkRetryRequestBodyQueryIgnoredCount2

	return CreateRequestBulkRetryRequestBodyQueryIgnoredCount{
		CreateRequestBulkRetryRequestBodyQueryIgnoredCount2: &createRequestBulkRetryRequestBodyQueryIgnoredCount2,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryIgnoredCountArrayOfinteger(arrayOfinteger []int64) CreateRequestBulkRetryRequestBodyQueryIgnoredCount {
	typ := CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeArrayOfinteger

	return CreateRequestBulkRetryRequestBodyQueryIgnoredCount{
		ArrayOfinteger: arrayOfinteger,
		Type:           typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryIgnoredCount) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	integer := new(int64)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&integer); err == nil {
		u.Integer = integer
		u.Type = CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeInteger
		return nil
	}

	createRequestBulkRetryRequestBodyQueryIgnoredCount2 := new(CreateRequestBulkRetryRequestBodyQueryIgnoredCount2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryIgnoredCount2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryIgnoredCount2 = createRequestBulkRetryRequestBodyQueryIgnoredCount2
		u.Type = CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeCreateRequestBulkRetryRequestBodyQueryIgnoredCount2
		return nil
	}

	arrayOfinteger := []int64{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfinteger); err == nil {
		u.ArrayOfinteger = arrayOfinteger
		u.Type = CreateRequestBulkRetryRequestBodyQueryIgnoredCountTypeArrayOfinteger
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryIgnoredCount) MarshalJSON() ([]byte, error) {
	if u.Integer != nil {
		return json.Marshal(u.Integer)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryIgnoredCount2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryIgnoredCount2)
	}

	if u.ArrayOfinteger != nil {
		return json.Marshal(u.ArrayOfinteger)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQueryIngestedAt2 struct {
	Any *bool      `json:"any,omitempty"`
	Gt  *time.Time `json:"gt,omitempty"`
	Gte *time.Time `json:"gte,omitempty"`
	Le  *time.Time `json:"le,omitempty"`
	Lte *time.Time `json:"lte,omitempty"`
}

type CreateRequestBulkRetryRequestBodyQueryIngestedAtType string

const (
	CreateRequestBulkRetryRequestBodyQueryIngestedAtTypeDateTime                                          CreateRequestBulkRetryRequestBodyQueryIngestedAtType = "date-time"
	CreateRequestBulkRetryRequestBodyQueryIngestedAtTypeCreateRequestBulkRetryRequestBodyQueryIngestedAt2 CreateRequestBulkRetryRequestBodyQueryIngestedAtType = "createRequestBulkRetry_requestBody_query_ingested_at_2"
)

type CreateRequestBulkRetryRequestBodyQueryIngestedAt struct {
	DateTime                                          *time.Time
	CreateRequestBulkRetryRequestBodyQueryIngestedAt2 *CreateRequestBulkRetryRequestBodyQueryIngestedAt2

	Type CreateRequestBulkRetryRequestBodyQueryIngestedAtType
}

func CreateCreateRequestBulkRetryRequestBodyQueryIngestedAtDateTime(dateTime time.Time) CreateRequestBulkRetryRequestBodyQueryIngestedAt {
	typ := CreateRequestBulkRetryRequestBodyQueryIngestedAtTypeDateTime

	return CreateRequestBulkRetryRequestBodyQueryIngestedAt{
		DateTime: &dateTime,
		Type:     typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryIngestedAtCreateRequestBulkRetryRequestBodyQueryIngestedAt2(createRequestBulkRetryRequestBodyQueryIngestedAt2 CreateRequestBulkRetryRequestBodyQueryIngestedAt2) CreateRequestBulkRetryRequestBodyQueryIngestedAt {
	typ := CreateRequestBulkRetryRequestBodyQueryIngestedAtTypeCreateRequestBulkRetryRequestBodyQueryIngestedAt2

	return CreateRequestBulkRetryRequestBodyQueryIngestedAt{
		CreateRequestBulkRetryRequestBodyQueryIngestedAt2: &createRequestBulkRetryRequestBodyQueryIngestedAt2,
		Type: typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryIngestedAt) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	dateTime := new(time.Time)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&dateTime); err == nil {
		u.DateTime = dateTime
		u.Type = CreateRequestBulkRetryRequestBodyQueryIngestedAtTypeDateTime
		return nil
	}

	createRequestBulkRetryRequestBodyQueryIngestedAt2 := new(CreateRequestBulkRetryRequestBodyQueryIngestedAt2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryIngestedAt2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryIngestedAt2 = createRequestBulkRetryRequestBodyQueryIngestedAt2
		u.Type = CreateRequestBulkRetryRequestBodyQueryIngestedAtTypeCreateRequestBulkRetryRequestBodyQueryIngestedAt2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryIngestedAt) MarshalJSON() ([]byte, error) {
	if u.DateTime != nil {
		return json.Marshal(u.DateTime)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryIngestedAt2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryIngestedAt2)
	}

	return nil, nil
}

// CreateRequestBulkRetryRequestBodyQueryParsedQuery2 - URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)
type CreateRequestBulkRetryRequestBodyQueryParsedQuery2 struct {
}

type CreateRequestBulkRetryRequestBodyQueryParsedQueryType string

const (
	CreateRequestBulkRetryRequestBodyQueryParsedQueryTypeStr                                                CreateRequestBulkRetryRequestBodyQueryParsedQueryType = "str"
	CreateRequestBulkRetryRequestBodyQueryParsedQueryTypeCreateRequestBulkRetryRequestBodyQueryParsedQuery2 CreateRequestBulkRetryRequestBodyQueryParsedQueryType = "createRequestBulkRetry_requestBody_query_parsed_query_2"
)

type CreateRequestBulkRetryRequestBodyQueryParsedQuery struct {
	Str                                                *string
	CreateRequestBulkRetryRequestBodyQueryParsedQuery2 *CreateRequestBulkRetryRequestBodyQueryParsedQuery2

	Type CreateRequestBulkRetryRequestBodyQueryParsedQueryType
}

func CreateCreateRequestBulkRetryRequestBodyQueryParsedQueryStr(str string) CreateRequestBulkRetryRequestBodyQueryParsedQuery {
	typ := CreateRequestBulkRetryRequestBodyQueryParsedQueryTypeStr

	return CreateRequestBulkRetryRequestBodyQueryParsedQuery{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryParsedQueryCreateRequestBulkRetryRequestBodyQueryParsedQuery2(createRequestBulkRetryRequestBodyQueryParsedQuery2 CreateRequestBulkRetryRequestBodyQueryParsedQuery2) CreateRequestBulkRetryRequestBodyQueryParsedQuery {
	typ := CreateRequestBulkRetryRequestBodyQueryParsedQueryTypeCreateRequestBulkRetryRequestBodyQueryParsedQuery2

	return CreateRequestBulkRetryRequestBodyQueryParsedQuery{
		CreateRequestBulkRetryRequestBodyQueryParsedQuery2: &createRequestBulkRetryRequestBodyQueryParsedQuery2,
		Type: typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryParsedQuery) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	str := new(string)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&str); err == nil {
		u.Str = str
		u.Type = CreateRequestBulkRetryRequestBodyQueryParsedQueryTypeStr
		return nil
	}

	createRequestBulkRetryRequestBodyQueryParsedQuery2 := new(CreateRequestBulkRetryRequestBodyQueryParsedQuery2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryParsedQuery2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryParsedQuery2 = createRequestBulkRetryRequestBodyQueryParsedQuery2
		u.Type = CreateRequestBulkRetryRequestBodyQueryParsedQueryTypeCreateRequestBulkRetryRequestBodyQueryParsedQuery2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryParsedQuery) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return json.Marshal(u.Str)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryParsedQuery2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryParsedQuery2)
	}

	return nil, nil
}

// CreateRequestBulkRetryRequestBodyQueryRejectionCause2 - Filter by rejection cause
type CreateRequestBulkRetryRequestBodyQueryRejectionCause2 struct {
	Any      *bool                         `json:"any,omitempty"`
	Contains *shared.RequestRejectionCause `json:"contains,omitempty"`
	Gt       *shared.RequestRejectionCause `json:"gt,omitempty"`
	Gte      *shared.RequestRejectionCause `json:"gte,omitempty"`
	Le       *shared.RequestRejectionCause `json:"le,omitempty"`
	Lte      *shared.RequestRejectionCause `json:"lte,omitempty"`
}

type CreateRequestBulkRetryRequestBodyQueryRejectionCauseType string

const (
	CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeRequestRejectionCause                                 CreateRequestBulkRetryRequestBodyQueryRejectionCauseType = "RequestRejectionCause"
	CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeCreateRequestBulkRetryRequestBodyQueryRejectionCause2 CreateRequestBulkRetryRequestBodyQueryRejectionCauseType = "createRequestBulkRetry_requestBody_query_rejection_cause_2"
	CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeArrayOfRequestRejectionCause                          CreateRequestBulkRetryRequestBodyQueryRejectionCauseType = "arrayOfRequestRejectionCause"
)

type CreateRequestBulkRetryRequestBodyQueryRejectionCause struct {
	RequestRejectionCause                                 *shared.RequestRejectionCause
	CreateRequestBulkRetryRequestBodyQueryRejectionCause2 *CreateRequestBulkRetryRequestBodyQueryRejectionCause2
	ArrayOfRequestRejectionCause                          []shared.RequestRejectionCause

	Type CreateRequestBulkRetryRequestBodyQueryRejectionCauseType
}

func CreateCreateRequestBulkRetryRequestBodyQueryRejectionCauseRequestRejectionCause(requestRejectionCause shared.RequestRejectionCause) CreateRequestBulkRetryRequestBodyQueryRejectionCause {
	typ := CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeRequestRejectionCause

	return CreateRequestBulkRetryRequestBodyQueryRejectionCause{
		RequestRejectionCause: &requestRejectionCause,
		Type:                  typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryRejectionCauseCreateRequestBulkRetryRequestBodyQueryRejectionCause2(createRequestBulkRetryRequestBodyQueryRejectionCause2 CreateRequestBulkRetryRequestBodyQueryRejectionCause2) CreateRequestBulkRetryRequestBodyQueryRejectionCause {
	typ := CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeCreateRequestBulkRetryRequestBodyQueryRejectionCause2

	return CreateRequestBulkRetryRequestBodyQueryRejectionCause{
		CreateRequestBulkRetryRequestBodyQueryRejectionCause2: &createRequestBulkRetryRequestBodyQueryRejectionCause2,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQueryRejectionCauseArrayOfRequestRejectionCause(arrayOfRequestRejectionCause []shared.RequestRejectionCause) CreateRequestBulkRetryRequestBodyQueryRejectionCause {
	typ := CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeArrayOfRequestRejectionCause

	return CreateRequestBulkRetryRequestBodyQueryRejectionCause{
		ArrayOfRequestRejectionCause: arrayOfRequestRejectionCause,
		Type:                         typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQueryRejectionCause) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	requestRejectionCause := new(shared.RequestRejectionCause)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&requestRejectionCause); err == nil {
		u.RequestRejectionCause = requestRejectionCause
		u.Type = CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeRequestRejectionCause
		return nil
	}

	createRequestBulkRetryRequestBodyQueryRejectionCause2 := new(CreateRequestBulkRetryRequestBodyQueryRejectionCause2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createRequestBulkRetryRequestBodyQueryRejectionCause2); err == nil {
		u.CreateRequestBulkRetryRequestBodyQueryRejectionCause2 = createRequestBulkRetryRequestBodyQueryRejectionCause2
		u.Type = CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeCreateRequestBulkRetryRequestBodyQueryRejectionCause2
		return nil
	}

	arrayOfRequestRejectionCause := []shared.RequestRejectionCause{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfRequestRejectionCause); err == nil {
		u.ArrayOfRequestRejectionCause = arrayOfRequestRejectionCause
		u.Type = CreateRequestBulkRetryRequestBodyQueryRejectionCauseTypeArrayOfRequestRejectionCause
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQueryRejectionCause) MarshalJSON() ([]byte, error) {
	if u.RequestRejectionCause != nil {
		return json.Marshal(u.RequestRejectionCause)
	}

	if u.CreateRequestBulkRetryRequestBodyQueryRejectionCause2 != nil {
		return json.Marshal(u.CreateRequestBulkRetryRequestBodyQueryRejectionCause2)
	}

	if u.ArrayOfRequestRejectionCause != nil {
		return json.Marshal(u.ArrayOfRequestRejectionCause)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQuerySourceIDType string

const (
	CreateRequestBulkRetryRequestBodyQuerySourceIDTypeStr        CreateRequestBulkRetryRequestBodyQuerySourceIDType = "str"
	CreateRequestBulkRetryRequestBodyQuerySourceIDTypeArrayOfstr CreateRequestBulkRetryRequestBodyQuerySourceIDType = "arrayOfstr"
)

type CreateRequestBulkRetryRequestBodyQuerySourceID struct {
	Str        *string
	ArrayOfstr []string

	Type CreateRequestBulkRetryRequestBodyQuerySourceIDType
}

func CreateCreateRequestBulkRetryRequestBodyQuerySourceIDStr(str string) CreateRequestBulkRetryRequestBodyQuerySourceID {
	typ := CreateRequestBulkRetryRequestBodyQuerySourceIDTypeStr

	return CreateRequestBulkRetryRequestBodyQuerySourceID{
		Str:  &str,
		Type: typ,
	}
}

func CreateCreateRequestBulkRetryRequestBodyQuerySourceIDArrayOfstr(arrayOfstr []string) CreateRequestBulkRetryRequestBodyQuerySourceID {
	typ := CreateRequestBulkRetryRequestBodyQuerySourceIDTypeArrayOfstr

	return CreateRequestBulkRetryRequestBodyQuerySourceID{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *CreateRequestBulkRetryRequestBodyQuerySourceID) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	str := new(string)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&str); err == nil {
		u.Str = str
		u.Type = CreateRequestBulkRetryRequestBodyQuerySourceIDTypeStr
		return nil
	}

	arrayOfstr := []string{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfstr); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = CreateRequestBulkRetryRequestBodyQuerySourceIDTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateRequestBulkRetryRequestBodyQuerySourceID) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return json.Marshal(u.Str)
	}

	if u.ArrayOfstr != nil {
		return json.Marshal(u.ArrayOfstr)
	}

	return nil, nil
}

type CreateRequestBulkRetryRequestBodyQueryStatus string

const (
	CreateRequestBulkRetryRequestBodyQueryStatusAccepted CreateRequestBulkRetryRequestBodyQueryStatus = "accepted"
	CreateRequestBulkRetryRequestBodyQueryStatusRejected CreateRequestBulkRetryRequestBodyQueryStatus = "rejected"
)

func (e CreateRequestBulkRetryRequestBodyQueryStatus) ToPointer() *CreateRequestBulkRetryRequestBodyQueryStatus {
	return &e
}

func (e *CreateRequestBulkRetryRequestBodyQueryStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accepted":
		fallthrough
	case "rejected":
		*e = CreateRequestBulkRetryRequestBodyQueryStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRequestBulkRetryRequestBodyQueryStatus: %v", v)
	}
}

// CreateRequestBulkRetryRequestBodyQuery - Filter properties for the events to be included in the bulk retry, use query parameters of [Requests](#requests)
type CreateRequestBulkRetryRequestBodyQuery struct {
	// URL Encoded string of the JSON to match to the data body
	Body        *CreateRequestBulkRetryRequestBodyQueryBody        `json:"body,omitempty"`
	BulkRetryID *CreateRequestBulkRetryRequestBodyQueryBulkRetryID `json:"bulk_retry_id,omitempty"`
	CreatedAt   *CreateRequestBulkRetryRequestBodyQueryCreatedAt   `json:"created_at,omitempty"`
	EventsCount *CreateRequestBulkRetryRequestBodyQueryEventsCount `json:"events_count,omitempty"`
	// URL Encoded string of the JSON to match to the data headers
	Headers *CreateRequestBulkRetryRequestBodyQueryHeaders `json:"headers,omitempty"`
	// Filter by requests IDs
	ID           *CreateRequestBulkRetryRequestBodyQueryID           `json:"id,omitempty"`
	IgnoredCount *CreateRequestBulkRetryRequestBodyQueryIgnoredCount `json:"ignored_count,omitempty"`
	IngestedAt   *CreateRequestBulkRetryRequestBodyQueryIngestedAt   `json:"ingested_at,omitempty"`
	// URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)
	ParsedQuery *CreateRequestBulkRetryRequestBodyQueryParsedQuery `json:"parsed_query,omitempty"`
	// URL Encoded string of the string to match partially to the path
	Path *string `json:"path,omitempty"`
	// Filter by rejection cause
	RejectionCause *CreateRequestBulkRetryRequestBodyQueryRejectionCause `json:"rejection_cause,omitempty"`
	// URL Encoded string of the string to match partially to the body, headers, parsed_query or path
	SearchTerm *string `json:"search_term,omitempty"`
	// Filter by source IDs
	SourceID *CreateRequestBulkRetryRequestBodyQuerySourceID `json:"source_id,omitempty"`
	Status   *CreateRequestBulkRetryRequestBodyQueryStatus   `json:"status,omitempty"`
	// Filter by verification status
	Verified *bool `json:"verified,omitempty"`
}

type CreateRequestBulkRetryRequestBody struct {
	// Filter properties for the events to be included in the bulk retry, use query parameters of [Requests](#requests)
	Query *CreateRequestBulkRetryRequestBodyQuery `json:"query,omitempty"`
}

type CreateRequestBulkRetryResponse struct {
	// Bad Request
	APIErrorResponse *shared.APIErrorResponse
	// A single requests bulk retry
	BatchOperation *shared.BatchOperation
	ContentType    string
	StatusCode     int
	RawResponse    *http.Response
}
