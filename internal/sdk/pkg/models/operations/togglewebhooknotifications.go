// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"hashicups/internal/sdk/pkg/models/shared"
	"net/http"
)

type ToggleWebhookNotificationsRequestBody struct {
	// Enable or disable webhook notifications on the workspace
	Enabled *bool `json:"enabled,omitempty"`
	// The Hookdeck Source to send the webhook to
	SourceID *string `json:"source_id,omitempty"`
	// List of topics to send notifications for
	Topics []shared.TopicsValue `json:"topics,omitempty"`
}

func (o *ToggleWebhookNotificationsRequestBody) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *ToggleWebhookNotificationsRequestBody) GetSourceID() *string {
	if o == nil {
		return nil
	}
	return o.SourceID
}

func (o *ToggleWebhookNotificationsRequestBody) GetTopics() []shared.TopicsValue {
	if o == nil {
		return nil
	}
	return o.Topics
}

type ToggleWebhookNotificationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Toggle operation status response
	ToggleWebhookNotifications *shared.ToggleWebhookNotifications
}

func (o *ToggleWebhookNotificationsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ToggleWebhookNotificationsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ToggleWebhookNotificationsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ToggleWebhookNotificationsResponse) GetToggleWebhookNotifications() *shared.ToggleWebhookNotifications {
	if o == nil {
		return nil
	}
	return o.ToggleWebhookNotifications
}
