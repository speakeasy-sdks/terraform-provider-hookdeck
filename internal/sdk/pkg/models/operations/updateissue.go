// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"hashicups/internal/sdk/pkg/models/shared"
	"net/http"
)

// UpdateIssueRequestBodyStatus - New status
type UpdateIssueRequestBodyStatus string

const (
	UpdateIssueRequestBodyStatusOpened       UpdateIssueRequestBodyStatus = "OPENED"
	UpdateIssueRequestBodyStatusIgnored      UpdateIssueRequestBodyStatus = "IGNORED"
	UpdateIssueRequestBodyStatusAcknowledged UpdateIssueRequestBodyStatus = "ACKNOWLEDGED"
	UpdateIssueRequestBodyStatusResolved     UpdateIssueRequestBodyStatus = "RESOLVED"
)

func (e UpdateIssueRequestBodyStatus) ToPointer() *UpdateIssueRequestBodyStatus {
	return &e
}

func (e *UpdateIssueRequestBodyStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPENED":
		fallthrough
	case "IGNORED":
		fallthrough
	case "ACKNOWLEDGED":
		fallthrough
	case "RESOLVED":
		*e = UpdateIssueRequestBodyStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateIssueRequestBodyStatus: %v", v)
	}
}

type UpdateIssueRequestBody struct {
	// New status
	Status UpdateIssueRequestBodyStatus `json:"status"`
}

type UpdateIssueRequest struct {
	RequestBody UpdateIssueRequestBody `request:"mediaType=application/json"`
	ID          string                 `pathParam:"style=simple,explode=false,name=id"`
}

type UpdateIssueResponse struct {
	// Bad Request
	APIErrorResponse *shared.APIErrorResponse
	ContentType      string
	// Updated issue
	Issue       *shared.Issue
	StatusCode  int
	RawResponse *http.Response
}
